labels = c("Mean number of exclusions")
colors = c("red3")
legend(location, labels, fill = colors)
dev.off()
write.table(c(v_mean_plot, 0), "dim 2 10^4 FPOP2 Mean number of exclusions.txt", row.names = FALSE,col.names = FALSE )
size <-10000
dim <- 3
sigma <- 1
mu <- matrix(0, nrow = dim, ncol = 1)
penalty <- 2*dim*sigma*log(size)
set.seed(13)
Data <- data_genDp(dim, size)
res_FPOP<- FPOPDp(Data, penalty, type = 2)
###############################
#     matrix "lbl_excl"       #
###############################
#"lbl_excl"  is the matrix with n rows.
#Each row contains a sequence of pairs of integer numbers for the moment t (t = 1:n).
#Each pair contains two values: candidate of changepoint and quantity of exclusion for this candidate.
## The values of matrix "lbl_excl" is contained in the papier "Test The data without changepoints".
lbl_excl <- readLines(con = 'test.txt', n = -1)
lbl_excl <- strsplit(lbl_excl,split = ' ')
lbl_excl <- sapply(lbl_excl, FUN = function(x) {as.integer(unlist(x))})
###############################
# matrix "matrix_exclusion"   #
###############################
#"matrix_exclusion"  is the matrix with  "length(lbl_excl) - 1" rows and "length(lbl_excl)" columns.
#Each position contains the number of exclusions for the given label(the row number) at the time t(the column number).
#If the element does not exist, position and value "NA".
matrix_exclusion <- matrix(NA,nrow = length(lbl_excl) - 1, ncol= length(lbl_excl))
for (i in 2:length(lbl_excl)){
j<- 1
while (j <= length(lbl_excl[[i]])){
matrix_exclusion[lbl_excl[[i]][j],i] <- lbl_excl[[i]][j+1]
j <- j+2
}
}
###############################
#     list "list_exclusion"   #
###############################
#"list_exclusion"  is the list with  "length(lbl_excl) - 1" list elements.
#Each list "list_exclusion[[label]]" contains the number of exclusions for the given label.
#If label do not have exclusions this list have  a length = 0.
list_exclusion <-lapply(seq_len(nrow(matrix_exclusion)), function(i) matrix_exclusion[i,])
for (i in  1:length(list_exclusion)){list_exclusion [[i]] = list_exclusion [[i]][!is.na(list_exclusion [[i]])]}
###############################
#     max_quantity_exclusion  #
#     max_length_interval     #
###############################
# max_quantity_exclusion is the range of the number of exclusions
# max_length_interval is the range of  the interval length
max_quantity_exclusion = 0
max_length_interval = 0
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
max_length_interval = max(max_length_interval,length(list_exclusion[[i]]))
max_quantity_exclusion = max(max_quantity_exclusion, list_exclusion[[i]])
}
}
############################################
# plot "Number of exclusions for interval" #
############################################
colors = "purple3"
# colors = palet(length(list_exclusion))
#we define empty plot
png("dim 3 Plot FPOP2 Exclusions data10^4.png",  width = 1500, height = 1000)
plot(c(0, max_length_interval), c(0, max_quantity_exclusion), main = "Dimension 3 FPOP2: The number of exclusion in the interval", xlab = "Time interval", ylab =  "Number of exclusions", type = "n")
#Plots for all labels
t  = c(1:max_length_interval)
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
y <- unlist(list_exclusion [[i]])
y <- jitter(y,0.3)
points(c(y,0), col = colors)
lines(c(y,0), col = colors)
}
}
######################
#value of mean for t #
######################
#initialization of list
mean_plot = list(NULL)
n_plot = 0
for (i in 1:max_length_interval) { mean_plot[i] = 0}
#sum calculation for t
for (i in 1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
n_plot = n_plot+1
for (j in 1:length(list_exclusion[[i]])){mean_plot[[j]]= mean_plot[[j]] + list_exclusion[[i]][j]}
}
}
for (i in 1:max_length_interval) {mean_plot[[i]] = mean_plot[[i]]/n_plot}
#list -> vector
v_mean_plot <- unlist(mean_plot)
#Plots for all labels
points(c(v_mean_plot, 0),col = "red3")
lines(c(v_mean_plot, 0),col = "red3", lwd = 3)
##############
#   legend   #
##############
location = "topright"
labels = c("Mean number of exclusions")
colors = c("red3")
legend(location, labels, fill = colors)
dev.off()
write.table(c(v_mean_plot, 0), "dim 3 10^4 FPOP2 Mean number of exclusions.txt", row.names = FALSE,col.names = FALSE )
size <-10000
dim <- 4
chp <- size
sigma <- 1
mu <- matrix(0, nrow = dim, ncol = 1)
penalty <- 2*sigma*dim*log(size)
set.seed(13)
Data <- data_genDp(dim, size)
res_FPOP<- FPOPDp(Data, penalty, type = 3)
###############################
#     matrix "lbl_excl"       #
###############################
#"lbl_excl"  is the matrix with n rows.
#Each row contains a sequence of pairs of integer numbers for the moment t (t = 1:n).
#Each pair contains two values: candidate of changepoint and quantity of exclusion for this candidate.
## The values of matrix "lbl_excl" is contained in the papier "Test The data without changepoints".
lbl_excl <- readLines(con = 'test.txt', n = -1)
lbl_excl <- strsplit(lbl_excl,split = ' ')
lbl_excl <- sapply(lbl_excl, FUN = function(x) {as.integer(unlist(x))})
###############################
# matrix "matrix_exclusion"   #
###############################
#"matrix_exclusion"  is the matrix with  "length(lbl_excl) - 1" rows and "length(lbl_excl)" columns.
#Each position contains the number of exclusions for the given label(the row number) at the time t(the column number).
#If the element does not exist, position and value "NA".
matrix_exclusion <- matrix(NA,nrow = length(lbl_excl) - 1, ncol= length(lbl_excl))
for (i in 2:length(lbl_excl)){
j<- 1
while (j <= length(lbl_excl[[i]])){
matrix_exclusion[lbl_excl[[i]][j],i] <- lbl_excl[[i]][j+1]
j <- j+2
}
}
###############################
#     list "list_exclusion"   #
###############################
#"list_exclusion"  is the list with  "length(lbl_excl) - 1" list elements.
#Each list "list_exclusion[[label]]" contains the number of exclusions for the given label.
#If label do not have exclusions this list have  a length = 0.
list_exclusion <-lapply(seq_len(nrow(matrix_exclusion)), function(i) matrix_exclusion[i,])
for (i in  1:length(list_exclusion)){list_exclusion [[i]] = list_exclusion [[i]][!is.na(list_exclusion [[i]])]}
###############################
#     max_quantity_exclusion  #
#     max_length_interval     #
###############################
# max_quantity_exclusion is the range of the number of exclusions
# max_length_interval is the range of  the interval length
max_quantity_exclusion = 0
max_length_interval = 0
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
max_length_interval = max(max_length_interval,length(list_exclusion[[i]]))
max_quantity_exclusion = max(max_quantity_exclusion, list_exclusion[[i]])
}
}
############################################
# plot "Number of exclusions for interval" #
############################################
colors = "royalblue3"
# colors = palet(length(list_exclusion))
#we define empty plot
png("dim 4 10^4 Plot FPOP3 Exclusions.png",  width = 1500, height = 1000)
plot(c(0, max_length_interval), c(0, max_quantity_exclusion), main = "Dimension 4 FPOP3: The number of exclusion in the interval", xlab = "Time interval", ylab =  "Number of exclusions", type = "n")
#Plots for all labels
t  = c(1:max_length_interval)
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
y <- unlist(list_exclusion [[i]])
y <- jitter(y,0.3)
points(c(y,0), col = colors)
lines(c(y,0), col = colors)
}
}
######################
#value of mean for t #
######################
#initialization of list
mean_plot = list(NULL)
n_plot = 0
for (i in 1:max_length_interval) { mean_plot[i] = 0}
#sum calculation for t
for (i in 1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
n_plot = n_plot+1
for (j in 1:length(list_exclusion[[i]])){mean_plot[[j]]= mean_plot[[j]] + list_exclusion[[i]][j]}
}
}
for (i in 1:max_length_interval) {mean_plot[[i]] = mean_plot[[i]]/n_plot}
#list -> vector
v_mean_plot <- unlist(mean_plot)
#Plots for all labels
points(c(v_mean_plot, 0),col = "red3")
lines(c(v_mean_plot, 0),col = "red3", lwd = 3)
##############
#   legend   #
##############
location = "topright"
labels = c("Mean number of exclusions")
colors = c("red3")
legend(location, labels, fill = colors)
dev.off()
write.table(c(v_mean_plot, 0), "dim 4 10^4 FPOP3 Mean number of exclusions.txt", row.names = FALSE,col.names = FALSE )
size <-10000
dim <- 4
sigma <- 1
mu <- matrix(0, nrow = dim, ncol = 1)
penalty <- 2*dim*sigma*log(size)
set.seed(13)
Data <- data_genDp(dim, size)
res_FPOP<- FPOPDp(Data, penalty, type = 2)
###############################
#     matrix "lbl_excl"       #
###############################
#"lbl_excl"  is the matrix with n rows.
#Each row contains a sequence of pairs of integer numbers for the moment t (t = 1:n).
#Each pair contains two values: candidate of changepoint and quantity of exclusion for this candidate.
## The values of matrix "lbl_excl" is contained in the papier "Test The data without changepoints".
lbl_excl <- readLines(con = 'test.txt', n = -1)
lbl_excl <- strsplit(lbl_excl,split = ' ')
lbl_excl <- sapply(lbl_excl, FUN = function(x) {as.integer(unlist(x))})
###############################
# matrix "matrix_exclusion"   #
###############################
#"matrix_exclusion"  is the matrix with  "length(lbl_excl) - 1" rows and "length(lbl_excl)" columns.
#Each position contains the number of exclusions for the given label(the row number) at the time t(the column number).
#If the element does not exist, position and value "NA".
matrix_exclusion <- matrix(NA,nrow = length(lbl_excl) - 1, ncol= length(lbl_excl))
for (i in 2:length(lbl_excl)){
j<- 1
while (j <= length(lbl_excl[[i]])){
matrix_exclusion[lbl_excl[[i]][j],i] <- lbl_excl[[i]][j+1]
j <- j+2
}
}
###############################
#     list "list_exclusion"   #
###############################
#"list_exclusion"  is the list with  "length(lbl_excl) - 1" list elements.
#Each list "list_exclusion[[label]]" contains the number of exclusions for the given label.
#If label do not have exclusions this list have  a length = 0.
list_exclusion <-lapply(seq_len(nrow(matrix_exclusion)), function(i) matrix_exclusion[i,])
for (i in  1:length(list_exclusion)){list_exclusion [[i]] = list_exclusion [[i]][!is.na(list_exclusion [[i]])]}
###############################
#     max_quantity_exclusion  #
#     max_length_interval     #
###############################
# max_quantity_exclusion is the range of the number of exclusions
# max_length_interval is the range of  the interval length
max_quantity_exclusion = 0
max_length_interval = 0
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
max_length_interval = max(max_length_interval,length(list_exclusion[[i]]))
max_quantity_exclusion = max(max_quantity_exclusion, list_exclusion[[i]])
}
}
############################################
# plot "Number of exclusions for interval" #
############################################
colors = "purple3"
# colors = palet(length(list_exclusion))
#we define empty plot
png("dim 4 Plot FPOP2 Exclusions data10^4.png",  width = 1500, height = 1000)
plot(c(0, max_length_interval), c(0, max_quantity_exclusion), main = "Dimension 4 FPOP2: The number of exclusion in the interval", xlab = "Time interval", ylab =  "Number of exclusions", type = "n")
#Plots for all labels
t  = c(1:max_length_interval)
for (i in  1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
y <- unlist(list_exclusion [[i]])
y <- jitter(y,0.3)
points(c(y,0), col = colors)
lines(c(y,0), col = colors)
}
}
######################
#value of mean for t #
######################
#initialization of list
mean_plot = list(NULL)
n_plot = 0
for (i in 1:max_length_interval) { mean_plot[i] = 0}
#sum calculation for t
for (i in 1:length(list_exclusion)){
if (length(list_exclusion [[i]]) != 0){
n_plot = n_plot+1
for (j in 1:length(list_exclusion[[i]])){mean_plot[[j]]= mean_plot[[j]] + list_exclusion[[i]][j]}
}
}
for (i in 1:max_length_interval) {mean_plot[[i]] = mean_plot[[i]]/n_plot}
#list -> vector
v_mean_plot <- unlist(mean_plot)
#Plots for all labels
points(c(v_mean_plot, 0),col = "red3")
lines(c(v_mean_plot, 0),col = "red3", lwd = 3)
##############
#   legend   #
##############
location = "topright"
labels = c("Mean number of exclusions")
colors = c("red3")
legend(location, labels, fill = colors)
dev.off()
write.table(c(v_mean_plot, 0), "dim 4 10^4 FPOP2 Mean number of exclusions.txt", row.names = FALSE,col.names = FALSE )
list_means<- list()
#dim <- c(2:10)
dim <- c(2:14)
s = "10^4"
for (i in 1:length(dim)){
ffname = paste("dim",dim[i],s,"FPOP3","Mean number of exclusions.txt")
f_data <- readLines(con = ffname, n = -1)
f_data <- strsplit(f_data,split = ' ')
f_data <- sapply(f_data, FUN = function(x) {as.double(unlist(x))})
list_means[[i]] <-f_data
}
time_max = 0
excl_max = 0
list_means<- list()
#dim <- c(2:10)
dim <- c(2:4)
s = "10^4"
for (i in 1:length(dim)){
ffname = paste("dim",dim[i],s,"FPOP3","Mean number of exclusions.txt")
f_data <- readLines(con = ffname, n = -1)
f_data <- strsplit(f_data,split = ' ')
f_data <- sapply(f_data, FUN = function(x) {as.double(unlist(x))})
list_means[[i]] <-f_data
}
time_max = 0
excl_max = 0
for (i in 1:length(list_means)){
if (time_max < length(list_means[[i]])) time_max = length(list_means[[i]])
if (excl_max < max(list_means[[i]])) excl_max = max(list_means[[i]])
}
Time = c(1:time_max)
excl_max
dataexcl = matrix(0, nrow = time_max, ncol = length(list_means)+1)
dataexcl[,1] = Time
for (i in 1:length(list_means)){
for (j in 1:length(list_means[[i]])) dataexcl[j,i+1] = list_means[[i]][j]
}
frdataexcl = as.data.frame(dataexcl)
Plot1<- ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
library(ggplot2)
library(ggpubr)
Plot1<- ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "Plot FPOP3 Exclusions data10^4.png",  width = 1500, height = 1000)
ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1) +labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
#+geom_line(aes(y = dataexcl[,5], color = "dim 5"), size = 1)+geom_line(aes(y = dataexcl[,6], color = "dim 6"), size = 1)+geom_line(aes(y = dataexcl[,7], color = "dim 7"), size = 1) +geom_line(aes(y = dataexcl[,8], color = "dim 8"), size = 1)+geom_line(aes(y = dataexcl[,9], color = "dim 9"), size = 1)+geom_line(aes(y = dataexcl[,10], color = "dim 10"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
dev.off()
list_means<- list()
dim <- c(2:4)
s = "10^4"
for (i in 1:length(dim)){
ffname = paste("dim",dim[i],s,"FPOP2","Mean number of exclusions.txt")
f_data <- readLines(con = ffname, n = -1)
f_data <- strsplit(f_data,split = ' ')
f_data <- sapply(f_data, FUN = function(x) {as.double(unlist(x))})
list_means[[i]] <-f_data
}
time_max = 0
excl_max = 0
for (i in 1:length(list_means)){
if (time_max < length(list_means[[i]])) time_max = length(list_means[[i]])
if (excl_max < max(list_means[[i]])) excl_max = max(list_means[[i]])
}
Time = c(1:time_max)
excl_max
dataexcl2 = matrix(0, nrow = time_max, ncol = length(list_means)+1)
dataexcl2[,1] = Time
for (i in 1:length(list_means)){
for (j in 1:length(list_means[[i]])) dataexcl2[j,i+1] = list_means[[i]][j]
}
frdataexcl2 = as.data.frame(dataexcl2)
Plot2 <-ggplot(frdataexcl2, aes(Time))+geom_line(aes(y = dataexcl2[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl2[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl2[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "Plot FPOP2 Exclusions data10^3.png",  width = 1500, height = 1000)
ggplot(frdataexcl2, aes(Time))+geom_line(aes(y = dataexcl2[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl2[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl2[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
#+geom_line(aes(y = dataexcl2[,5], color = "dim 5"), size = 1)+geom_line(aes(y = dataexcl2[,6], color = "dim 6"), size = 1)+geom_line(aes(y = dataexcl2[,7], color = "dim 7"), size = 1) +geom_line(aes(y = dataexcl2[,8], color = "dim 8"), size = 1)+geom_line(aes(y = dataexcl2[,9], color = "dim 9"), size = 1)+geom_line(aes(y = dataexcl2[,10], color = "dim 10"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
dev.off()
png(filename = "Plot FPOP2 Exclusions data10^4.png",  width = 1500, height = 1000)
ggplot(frdataexcl2, aes(Time))+geom_line(aes(y = dataexcl2[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl2[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl2[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
#+geom_line(aes(y = dataexcl2[,5], color = "dim 5"), size = 1)+geom_line(aes(y = dataexcl2[,6], color = "dim 6"), size = 1)+geom_line(aes(y = dataexcl2[,7], color = "dim 7"), size = 1) +geom_line(aes(y = dataexcl2[,8], color = "dim 8"), size = 1)+geom_line(aes(y = dataexcl2[,9], color = "dim 9"), size = 1)+geom_line(aes(y = dataexcl2[,10], color = "dim 10"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
dev.off()
png(filename = "Plot FPOP Exclusions data10^4.png",  width = 1500, height = 1000)
ggarrange(Plot1,Plot2,ncol = 1)
dev.off()
Plot2 <-ggplot(frdataexcl2, aes(Time))+geom_line(aes(y = dataexcl2[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl2[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl2[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
Plot1<- ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "Plot FPOP Exclusions data10^4.png",  width = 1500, height = 1000)
ggarrange(Plot1,Plot2,ncol = 1)
dev.off()
Plot2
Plot1
Plot1<- ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
Plot1
for (i in 1:length(dim)){
ffname = paste("dim",dim[i],s,"FPOP3","Mean number of exclusions.txt")
f_data <- readLines(con = ffname, n = -1)
f_data <- strsplit(f_data,split = ' ')
f_data <- sapply(f_data, FUN = function(x) {as.double(unlist(x))})
list_means[[i]] <-f_data
}
time_max = 0
excl_max = 0
for (i in 1:length(list_means)){
if (time_max < length(list_means[[i]])) time_max = length(list_means[[i]])
if (excl_max < max(list_means[[i]])) excl_max = max(list_means[[i]])
}
Time = c(1:time_max)
excl_max
dataexcl = matrix(0, nrow = time_max, ncol = length(list_means)+1)
dataexcl[,1] = Time
for (i in 1:length(list_means)){
for (j in 1:length(list_means[[i]])) dataexcl[j,i+1] = list_means[[i]][j]
}
frdataexcl = as.data.frame(dataexcl)
Plot1<- ggplot(frdataexcl, aes(Time))+geom_line(aes(y = dataexcl[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP3:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "Plot FPOP Exclusions data10^4.png",  width = 1500, height = 1000)
ggarrange(Plot1,Plot2,ncol = 1)
dev.off()
Plot2
Plot1
############################################################################
list_means<- list()
dim <- c(2:4)
s = "10^4"
for (i in 1:length(dim)){
ffname = paste("dim",dim[i],s,"FPOP2","Mean number of exclusions.txt")
f_data <- readLines(con = ffname, n = -1)
f_data <- strsplit(f_data,split = ' ')
f_data <- sapply(f_data, FUN = function(x) {as.double(unlist(x))})
list_means[[i]] <-f_data
}
time_max = 0
excl_max = 0
for (i in 1:length(list_means)){
if (time_max < length(list_means[[i]])) time_max = length(list_means[[i]])
if (excl_max < max(list_means[[i]])) excl_max = max(list_means[[i]])
}
Time = c(1:time_max)
excl_max
dataexcl2 = matrix(0, nrow = time_max, ncol = length(list_means)+1)
dataexcl2[,1] = Time
for (i in 1:length(list_means)){
for (j in 1:length(list_means[[i]])) dataexcl2[j,i+1] = list_means[[i]][j]
}
frdataexcl2 = as.data.frame(dataexcl2)
Plot2 <-ggplot(frdataexcl2, aes(Time))+geom_line(aes(y = dataexcl2[,2], color = "dim 2"), size = 1)+geom_line(aes(y = dataexcl2[,3], color = "dim 3"), size = 1)+geom_line(aes(y = dataexcl2[,4], color = "dim 4"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
#+geom_line(aes(y = dataexcl2[,5], color = "dim 5"), size = 1)+geom_line(aes(y = dataexcl2[,6], color = "dim 6"), size = 1)+geom_line(aes(y = dataexcl2[,7], color = "dim 7"), size = 1) +geom_line(aes(y = dataexcl2[,8], color = "dim 8"), size = 1)+geom_line(aes(y = dataexcl2[,9], color = "dim 9"), size = 1)+geom_line(aes(y = dataexcl2[,10], color = "dim 10"), size = 1)+labs( x = "Time", y = "Number of exclusion being considered", title ="FPOP2:Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "Plot FPOP Exclusions data10^4.png",  width = 1500, height = 1000)
ggarrange(Plot1,Plot2,ncol = 1)
dev.off()
#############
ggarrange(Plot1,Plot2,ncol = 1)
PLOT_FPOP = list()
tdif = length(dataexcl2[,10]) -length(dataexcl[,10])
PLOT_FPOP = list()
tdif = length(dataexcl2[,2]) -length(dataexcl[,2])
tdif
tdif
length(dataexcl[,2]
)
length(dataexcl2[,2])
tdif = -length(dataexcl2[,2]) +length(dataexcl[,2])
tdif
Fdim4 = data.frame(Time,dataexcl[,4],c(dataexcl2[,4], seq(0,0,length.out = tdif)))
Fdim3 = data.frame(Time,dataexcl[,3],c(dataexcl2[,3], seq(0,0,length.out = tdif)))
Fdim2 = data.frame(Time,dataexcl[,2],c(dataexcl2[,2], seq(0,0,length.out = tdif)))
PLOT_FPOP = list()
PLOT_FPOP = list()
PLOT_FPOP[[2]] <- ggplot(Fdim2, aes(Time))+geom_line(aes(y = Fdim2[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim2[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 2: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
PLOT_FPOP[[3]] <- ggplot(Fdim3, aes(Time))+geom_line(aes(y = Fdim3[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim3[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 3: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
PLOT_FPOP[[4]] <- ggplot(Fdim4, aes(Time))+geom_line(aes(y = Fdim4[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim4[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 4: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
Fdim4 = data.frame(Time,dataexcl[,4],c(dataexcl2[,4], seq(0,0,length.out = tdif)))
Fdim3 = data.frame(Time,dataexcl[,3],c(dataexcl2[,3], seq(0,0,length.out = tdif)))
Fdim2 = data.frame(Time,dataexcl[,2],c(dataexcl2[,2], seq(0,0,length.out = tdif)))
tdif
dataexcl[,2]
Time
c(dataexcl2[,2], seq(0,0,length.out = tdif))
tdif = -length(dataexcl2[,4]) +length(dataexcl[,4])
tdif
data.frame(Time,dataexcl[,2],c(dataexcl2[,2], seq(0,0,length.out = tdif)))
Fdim2 = data.frame(Time,dataexcl[,2],c(dataexcl2[,2], seq(0,0,length.out = tdif)))
c(dataexcl2[,2], seq(0,0,length.out = tdif))
dataexcl[,2]
Time
Time = c(1:length(dataexcl[,4]))
Fdim4 = data.frame(Time,dataexcl[,4],c(dataexcl2[,4], seq(0,0,length.out = tdif)))
Fdim3 = data.frame(Time,dataexcl[,3],c(dataexcl2[,3], seq(0,0,length.out = tdif)))
Fdim2 = data.frame(Time,dataexcl[,2],c(dataexcl2[,2], seq(0,0,length.out = tdif)))
PLOT_FPOP = list()
PLOT_FPOP[[2]] <- ggplot(Fdim2, aes(Time))+geom_line(aes(y = Fdim2[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim2[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 2: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
PLOT_FPOP[[3]] <- ggplot(Fdim3, aes(Time))+geom_line(aes(y = Fdim3[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim3[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 3: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
PLOT_FPOP[[4]] <- ggplot(Fdim4, aes(Time))+geom_line(aes(y = Fdim4[,2], color = "FPOP3"), size = 1)+geom_line(aes(y = Fdim4[,3], color = "FPOP2"), size = 1)+labs( x = "Time", y = "Number of exclusions being considered", title ="Dimension 4: Exclusions")+theme(legend.position = c(1, 1),legend.justification = c(1, 1))
png(filename = "dim 2 PLOT FPOP 10^4 MultiTest Exclusions.png",  width = 1500, height = 1000)
ggarrange(PLOT_FPOP[[2]],ncol = 1)
dev.off()
png(filename = "dim 3 PLOT FPOP 10^4 MultiTest Exclusions.png",  width = 1500, height = 1000)
ggarrange(PLOT_FPOP[[3]],ncol = 1)
dev.off()
png(filename = "dim 4 PLOT FPOP 10^4 MultiTest Exclusions.png",  width = 1500, height = 1000)
ggarrange(PLOT_FPOP[[4]],ncol = 1)
dev.off()
png(filename = "dim 2,3,4 PLOT FPOP 10^4 MultiTest Exclusions.png",  width = 1500, height = 1000)
ggarrange(PLOT_FPOP[[2]],PLOT_FPOP[[3]],PLOT_FPOP[[4]],ncol = 1)
dev.off()
